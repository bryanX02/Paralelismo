Begin optimization report for: euclideanDistance(float**, int, float*, int)

LOOP BEGIN at main.cpp (13, 5)
    remark #15301: SIMD LOOP WAS VECTORIZED
    remark #15305: vectorization support: vector length 4
LOOP END

LOOP BEGIN at main.cpp (13, 5)
<Remainder loop for vectorization>
LOOP END
=================================================================

Begin optimization report for: classify(CSVData, float*, int, float*, int*)

LOOP BEGIN at main.cpp (57, 5)
    remark #15344: Loop was not vectorized: vector dependence prevents vectorization
    remark #15346: vector dependence: assumed FLOW dependence between [ /home/dacoleto/Paralelismo/modulo2/practica2.1/Ejercicio5/main.cpp (58, 13) ] and [ /home/dacoleto/Paralelismo/modulo2/practica2.1/Ejercicio5/main.cpp (58, 30) ] 
    remark #15346: vector dependence: assumed FLOW dependence between [ /home/dacoleto/Paralelismo/modulo2/practica2.1/Ejercicio5/main.cpp (58, 13) ] and [ /home/dacoleto/Paralelismo/modulo2/practica2.1/Ejercicio5/main.cpp (58, 13) ] 
    remark #25436: Loop completely unrolled by 9
LOOP END

LOOP BEGIN at main.cpp (24, 5)

    LOOP BEGIN at main.cpp (13, 5)
    LOOP END
LOOP END

LOOP BEGIN at main.cpp (32, 5)
    remark #15541: loop was not vectorized: outer loop is not an auto-vectorization candidate.

    LOOP BEGIN at main.cpp (34, 9)
        remark #15344: Loop was not vectorized: vector dependence prevents vectorization
        remark #15346: vector dependence: assumed FLOW dependence between [ /home/dacoleto/Paralelismo/modulo2/practica2.1/Ejercicio5/main.cpp (35, 17) ] and [ /home/dacoleto/Paralelismo/modulo2/practica2.1/Ejercicio5/main.cpp (35, 32) ] 
        remark #15346: vector dependence: assumed FLOW dependence between [ /home/dacoleto/Paralelismo/modulo2/practica2.1/Ejercicio5/main.cpp (35, 17) ] and [ /home/dacoleto/Paralelismo/modulo2/practica2.1/Ejercicio5/main.cpp (35, 17) ] 
        remark #25439: Loop unrolled with remainder by 8
    LOOP END

    LOOP BEGIN at main.cpp (34, 9)
    <Remainder loop>
    LOOP END
LOOP END

LOOP BEGIN
    remark #25436: Loop completely unrolled by 10
LOOP END

LOOP BEGIN at main.cpp (51, 5)
    remark #15344: Loop was not vectorized: vector dependence prevents vectorization
    remark #15346: vector dependence: assumed FLOW dependence between [ /home/dacoleto/Paralelismo/modulo2/practica2.1/Ejercicio5/main.cpp (52, 9) ] and [ /home/dacoleto/Paralelismo/modulo2/practica2.1/Ejercicio5/main.cpp (52, 31) ] 
    remark #25439: Loop unrolled with remainder by 8
LOOP END

LOOP BEGIN at main.cpp (51, 5)
<Remainder loop>
LOOP END
=================================================================

Begin optimization report for: evaluate_model(float*, float*, CSVData, int*)

LOOP BEGIN at main.cpp (69, 5)
    remark #15301: SIMD LOOP WAS VECTORIZED
    remark #15305: vectorization support: vector length 4
LOOP END

LOOP BEGIN at main.cpp (69, 5)
<Remainder loop for vectorization>
LOOP END
=================================================================

Begin optimization report for: main

LOOP BEGIN at main.cpp (100, 5)

    LOOP BEGIN at main.cpp (101, 9)
        remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
        remark #25439: Loop unrolled with remainder by 8
    LOOP END

    LOOP BEGIN at main.cpp (101, 9)
    <Remainder loop>
        remark #25585: Loop converted to switch
    LOOP END
LOOP END

LOOP BEGIN at main.cpp (69, 5)
    remark #15301: SIMD LOOP WAS VECTORIZED
    remark #15305: vectorization support: vector length 4
LOOP END

LOOP BEGIN at main.cpp (69, 5)
<Remainder loop for vectorization>
LOOP END
=================================================================

---- Begin Inlining Report ----
Option Values:
  inline-threshold: 225
  inlinehint-threshold: 325
  inlinecold-threshold: 45
  inlineoptsize-threshold: 15

COMPILE FUNC: euclideanDistance(float**, int, float*, int)

COMPILE FUNC: classify(CSVData, float*, int, float*, int*)
   -> INLINE: euclideanDistance(float**, int, float*, int) main.cpp(27,24)

COMPILE FUNC: evaluate_model(float*, float*, CSVData, int*)

COMPILE FUNC: main
   -> INLINE: evaluate_model(float*, float*, CSVData, int*) main.cpp(113,5)
   -> classify(CSVData, float*, int, float*, int*) main.cpp(104,21)

---- End Inlining Report ------
Register allocation report for: euclideanDistance(float**, int, float*, int)
FUNCTION BEGIN
 LOOP1 BEGIN at (main.cpp:13:5)
 LOOP1 END
 LOOP1 BEGIN at (main.cpp:13:5)
 LOOP1 END

Hardware registers used
 Reserved : 1 [ mxcsr  ]
 Available : 20 [ rbp r12 r13 r14 r15 zmm5 zmm6 zmm7 zmm8 zmm9 zmm10 zmm11 zmm12 zmm13 zmm14 zmm15 k0_k1 k2_k3 k4_k5 k6_k7  ]
 Callee Saved : 1 [ rbx  ]
 Assigned : 16 [ eflags rax rbx rcx rdi rdx rsi r8 r9 r10 r11 zmm0 zmm1 zmm2 zmm3 zmm4  ]

Routine stack 
 Variables : 0 Bytes
   Read Count : 0
   Write Count : 0
 Spills : 0 Bytes
   Read Count : 0
   Write Count : 0

FUNCTION END
Register allocation report for: classify(CSVData, float*, int, float*, int*)
FUNCTION BEGIN
 3 reloads 4 spills 
 LOOP1 BEGIN at (main.cpp:32:5)
  3 reloads 
  LOOP2 BEGIN at (main.cpp:34:9)
  LOOP2 END
  LOOP2 BEGIN at (main.cpp:34:9)
  LOOP2 END
 LOOP1 END
 LOOP1 BEGIN at (main.cpp:51:5)
 LOOP1 END
 LOOP1 BEGIN at (main.cpp:51:5)
 LOOP1 END
 LOOP1 BEGIN at (main.cpp:24:5)
  LOOP2 BEGIN at (main.cpp:13:5 @[ main.cpp:27:24 ])
  LOOP2 END
 LOOP1 END

Hardware registers used
 Reserved : 1 [ mxcsr  ]
 Available : 18 [ zmm2 zmm3 zmm4 zmm5 zmm6 zmm7 zmm8 zmm9 zmm10 zmm11 zmm12 zmm13 zmm14 zmm15 k0_k1 k2_k3 k4_k5 k6_k7  ]
 Callee Saved : 6 [ rbp rbx r12 r13 r14 r15  ]
 Assigned : 18 [ eflags rax rbp rbx rcx rdi rdx rsi r8 r9 r10 r11 r12 r13 r14 r15 zmm0 zmm1  ]

Routine stack 
 Variables : 100 Bytes
   Read Count : 34
   Write Count : 19
 Spills : 28 Bytes
   Read Count : 6
   Write Count : 4

FUNCTION END
Register allocation report for: evaluate_model(float*, float*, CSVData, int*)
FUNCTION BEGIN
 LOOP1 BEGIN at (main.cpp:69:5)
 LOOP1 END
 LOOP1 BEGIN at (main.cpp:69:5)
 LOOP1 END

Hardware registers used
 Reserved : 2 [ rip mxcsr  ]
 Available : 14 [ rbp r12 r13 r14 r15 zmm11 zmm12 zmm13 zmm14 zmm15 k0_k1 k2_k3 k4_k5 k6_k7  ]
 Callee Saved : 0 [  ]
 Assigned : 22 [ eflags rax rbx rcx rdi rdx rsi r8 r9 r10 r11 zmm0 zmm1 zmm2 zmm3 zmm4 zmm5 zmm6 zmm7 zmm8 zmm9 zmm10  ]

Routine stack 
 Variables : 32 Bytes
   Read Count : 1
   Write Count : 0
 Spills : 0 Bytes
   Read Count : 0
   Write Count : 0

FUNCTION END
Register allocation report for: main
FUNCTION BEGIN
 2 reloads 2 spills 
 LOOP1 BEGIN at (main.cpp:69:5 @[ main.cpp:113:5 ])
 LOOP1 END
 LOOP1 BEGIN at (main.cpp:69:5 @[ main.cpp:113:5 ])
 LOOP1 END
 LOOP1 BEGIN at (main.cpp:100:5)
  LOOP2 BEGIN at (main.cpp:101:9)
  LOOP2 END
 LOOP1 END

Hardware registers used
 Reserved : 4 [ mxcsr rip rsp ssp  ]
 Available : 11 [ r10 r11 zmm11 zmm12 zmm13 zmm14 zmm15 k0_k1 k2_k3 k4_k5 k6_k7  ]
 Callee Saved : 6 [ rbp rbx r12 r13 r14 r15  ]
 Assigned : 25 [ eflags rax rbp rbx rcx rdi rdx rsi r8 r9 r12 r13 r14 r15 zmm0 zmm1 zmm2 zmm3 zmm4 zmm5 zmm6 zmm7 zmm8 zmm9 zmm10  ]

Routine stack 
 Variables : 104 Bytes
   Read Count : 24
   Write Count : 5
 Spills : 16 Bytes
   Read Count : 2
   Write Count : 2

FUNCTION END
